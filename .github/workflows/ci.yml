name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit-tests:
    name: Unit tests (client + server)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Run unit tests via Makefile
        run: make unit-test
        env:
          CI: true

  e2e-tests:
    name: "Functional tests (Playwright: API + UI)"
    runs-on: ubuntu-latest
    needs: unit-tests

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Compose up (server, client, mongo)
        run: |
          docker compose version || true
          make up

      - name: Wait for API (8080)
        run: |
          for i in {1..60}; do
            if curl -sS http://localhost:8080/healthz >/dev/null 2>&1; then
              echo "API is up"; exit 0; fi; echo "Waiting for API..."; sleep 2; done; exit 1

      - name: Wait for Client (3000)
        run: |
          for i in {1..60}; do
            if curl -sS http://localhost:3000 >/dev/null 2>&1; then echo "Client is up"; exit 0; fi; echo "Waiting for Client..."; sleep 2; done; exit 1

      - name: Setup Node.js for tests
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Install Playwright browsers
        uses: microsoft/playwright-github-action@v1

      - name: Run Playwright tests via Makefile
        run: make functional-test
        env:
          API_BASE_URL: http://localhost:8080/api
          CLIENT_BASE_URL: http://localhost:3000

      - name: Show docker-compose logs on failure
        if: failure()
        run: |
          docker compose logs --no-color || true

      - name: Compose down
        if: always()
        run: make down
